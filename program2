class CircularQueue:
    def __init__(self, maxi_size=5):
        self.normalqueue = [None] * maxi_size
        self.front = None
        self.rear = 0
        self.maxi_size = maxi_size

    def enqueue(self, data):
        if self.front is None:
            self.front = 0

        if (self.rear + 1) % self.maxi_size == self.front:
            self.dequeue()

        self.normalqueue[self.rear] = data
        self.rear = (self.rear + 1) % self.maxi_size

    def dequeue(self):
        if self.front is None:
            print("Queue is empty")
            return None

        data = self.normalqueue[self.front]
        self.normalqueue[self.front] = None

        if self.front == self.rear:
            self.front = None
            self.rear = 0
        else:
            self.front = (self.front + 1) % self.maxi_size

        return data

queue1 = CircularQueue()
queue1.enqueue(1)
queue1.enqueue(2)
queue1.enqueue(3)
queue1.enqueue(4)
queue1.enqueue(5)
print("Dequeued:", queue1.dequeue())

queue1.enqueue(6)
print("Queue elements:", [i for i in queue1.normalqueue if i is not None])
